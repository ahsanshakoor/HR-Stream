# Generated by Django 3.0.2 on 2023-01-09 08:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import home.validator
import tasks.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('project', '0001_initial'),
        ('accounts', '0002_auto_20230109_0843'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Board',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Board Title')),
                ('color', models.CharField(max_length=10, verbose_name='Board Title')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='boardCompany', to='accounts.Company', verbose_name='Company')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_board', to='project.Project', verbose_name='Project Name')),
            ],
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=125, verbose_name='Card Title')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Card Description')),
                ('priority', models.CharField(choices=[('High', 'High'), ('Medium', 'Medium'), ('Low', 'Low')], default='Medium', max_length=25, verbose_name='Card Priority')),
                ('due_date', models.DateTimeField(null=True, verbose_name='Due Date')),
                ('status', models.CharField(choices=[('finished', 'Finished'), ('in_progress', 'In Progress'), ('pending', 'Pending'), ('on_hold', 'On Hold'), ('under_review', 'Under Review')], default='pending', max_length=25)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('progress', models.CharField(blank=True, choices=[('0', '0'), ('10', '10'), ('20', '20'), ('30', '30'), ('40', '40'), ('50', '50'), ('60', '60'), ('70', '70'), ('80', '80'), ('90', '90'), ('100', '100')], default='0', max_length=25, null=True)),
                ('archived', models.BooleanField(default=False)),
                ('assign_to', models.ManyToManyField(related_name='card_assignee', to=settings.AUTH_USER_MODEL, verbose_name='Employee')),
                ('board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='board_cards', to='tasks.Board', verbose_name='Board Name')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cardCompany', to='accounts.Company', verbose_name='Company')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='card_creator', to=settings.AUTH_USER_MODEL, verbose_name='Card Created By')),
                ('follower', models.ManyToManyField(related_name='card_follower', to=settings.AUTH_USER_MODEL, verbose_name='Follower')),
            ],
            options={
                'ordering': ('-updated_at',),
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=125, verbose_name='Task Title')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Task Description')),
                ('priority', models.CharField(choices=[('High', 'High'), ('Medium', 'Medium'), ('Low', 'Low')], default='Medium', max_length=25, verbose_name='Task Priority')),
                ('due_date', models.DateField(null=True, verbose_name='Due Date')),
                ('status', models.CharField(choices=[('finished', 'Finished'), ('in_progress', 'In Progress'), ('pending', 'Pending'), ('on hold', 'On Hold'), ('under review', 'Under Review')], default='pending', max_length=25)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('progress', models.CharField(blank=True, choices=[('0', '0'), ('10', '10'), ('20', '20'), ('30', '30'), ('40', '40'), ('50', '50'), ('60', '60'), ('70', '70'), ('80', '80'), ('90', '90'), ('100', '100')], default='0', max_length=25, null=True)),
                ('assign_to', models.ManyToManyField(related_name='task_assignee', to=settings.AUTH_USER_MODEL, verbose_name='Employee')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taskCompany', to='accounts.Company', verbose_name='Company')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='task_creator', to=settings.AUTH_USER_MODEL, verbose_name='Task Created By')),
                ('follower', models.ManyToManyField(related_name='task_follower', to=settings.AUTH_USER_MODEL, verbose_name='Follower')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_project', to='project.Project', verbose_name='Project Name')),
            ],
        ),
        migrations.CreateModel(
            name='TaskFiles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(max_length=1000, upload_to=tasks.models.get_company_task_path, validators=[home.validator.MaxSizeValidator(5)], verbose_name='File')),
                ('type', models.CharField(max_length=8, verbose_name='File Type')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taskFileCompany', to='accounts.Company', verbose_name='Company')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_files', to='tasks.Task', verbose_name='Task')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='user_task_files', to=settings.AUTH_USER_MODEL, verbose_name='Uploaded By')),
            ],
        ),
        migrations.CreateModel(
            name='CardFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(max_length=1000, upload_to=tasks.models.get_company_card_files_path)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cardfiles', to='tasks.Card')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='CardFiles', to='accounts.Company')),
            ],
        ),
    ]
